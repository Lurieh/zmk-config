#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define ERGOL 1
#define LOWER 2
#define RAISE 3
#define CHARCODE 4
#define EXTRA_CHARCODE 5
#define KEYCODE 6
#define EXTRA_KEYCODE 7
#define DEAD_L 8
#define DEAD_UP_L 9
#define SYM_LAYER 10

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34 35 36 37
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 38 39 40 41 42 43
#define THUMBS_L 44 45 46
#define THUMBS_R 47 48 49

#define COMPOSE_KEY RALT

/ {    
    macros {
        double_0: double_0 {
            compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                = <&macro_tap &kp KP_NUMBER_0>
                    , <&macro_tap &kp KP_NUMBER_0>;
            };

            // Ergo-L Macros
        cmp_sq: compose_accents_single_quote {
            compatible = "zmk,behavior-macro-one-param";
                #binding-cells = <1>;
                bindings
                = <&macro_tap &kp COMPOSE_KEY>
                    , <&macro_tap &kp SINGLE_QUOTE>
                    , <&macro_param_1to1>
                    , <&macro_tap &kp MACRO_PLACEHOLDER>;
            };

            cmp_gq: compose_accents_grave_quote {
            compatible = "zmk,behavior-macro-one-param";
                #binding-cells = <1>;
                bindings
                = <&macro_tap &kp COMPOSE_KEY>
                    , <&macro_tap &kp GRAVE>
                    , <&macro_param_1to1>
                    , <&macro_tap &kp MACRO_PLACEHOLDER>;
            };

            cmp_car: compose_accents_caret {
            compatible = "zmk,behavior-macro-one-param";
                #binding-cells = <1>;
                bindings
                = <&macro_tap &kp COMPOSE_KEY>
                    , <&macro_tap &kp CARET>
                    , <&macro_param_1to1>
                    , <&macro_tap &kp MACRO_PLACEHOLDER>;
            };

            cedille: compose_cedille {
            compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                = <&macro_tap &kp COMPOSE_KEY>
                    , <&macro_tap &kp COMMA>
                    , <&macro_tap &kp C>;
            };

            cmp_oe: compose_oe_char {
            compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                = <&macro_tap &kp COMPOSE_KEY>
                    , <&macro_tap &kp O>
                    , <&macro_tap &kp E>;
            };

            cmp_micro: compose_micro_char {
            compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                = <&macro_tap &kp COMPOSE_KEY>
                    , <&macro_tap &kp M>
                    , <&macro_tap &kp U>;
            };

            cmp_i_trem: compose_i_trema {
            compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                = <&macro_tap &kp SEMI>
                    , <&macro_tap &kp SEMI>
                    , <&macro_tap &kp I>;
            };

            cmp_trem: compose_trema {
            compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                = <&macro_tap &kp SEMI>
                    , <&macro_tap &kp SEMI>;
            };

            cmp_sq_u: compose_accents_single_quote_upper {
            compatible = "zmk,behavior-macro-one-param";
                #binding-cells = <1>;
                bindings
                = <&macro_tap &kp COMPOSE_KEY>
                    , <&macro_tap &kp SINGLE_QUOTE>
                    , <&macro_press &kp LSHFT>
                    , <&macro_param_1to1>
                    , <&macro_tap &kp MACRO_PLACEHOLDER>
                    , <&macro_release &kp LSHFT>;
            };

            cmp_gq_u: compose_accents_grave_quote_upper {
            compatible = "zmk,behavior-macro-one-param";
                #binding-cells = <1>;
                bindings
                = <&macro_tap &kp COMPOSE_KEY>
                    , <&macro_tap &kp GRAVE>
                    , <&macro_press &kp LSHFT>
                    , <&macro_param_1to1>
                    , <&macro_tap &kp MACRO_PLACEHOLDER>
                    , <&macro_release &kp LSHFT>;
            };

            cmp_car_u: compose_accents_caret_upper {
            compatible = "zmk,behavior-macro-one-param";
                #binding-cells = <1>;
                bindings
                = <&macro_tap &kp COMPOSE_KEY>
                    , <&macro_tap &kp CARET>
                    , <&macro_press &kp LSHFT>
                    , <&macro_param_1to1>
                    , <&macro_tap &kp MACRO_PLACEHOLDER>
                    , <&macro_release &kp LSHFT>;
            };

            cedille_u: compose_cedille_upper {
            compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                = <&macro_tap &kp COMPOSE_KEY>
                    , <&macro_tap &kp COMMA>
                    , <&macro_press &kp LSHFT>
                    , <&macro_tap &kp C>
                    , <&macro_release &kp LSHFT>;
            };

            cmp_oe_u: compose_oe_char_upper {
            compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                = <&macro_tap &kp COMPOSE_KEY>
                    , <&macro_press &kp LSHFT>
                    , <&macro_tap &kp O>
                    , <&macro_tap &kp E>
                    , <&macro_release &kp LSHFT>;
            };

           cmp_i_trem_u: compose_i_trema_upper {
            compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                = <&macro_tap &kp COMPOSE_KEY>
                    , <&macro_tap &kp DOUBLE_QUOTES>
                    , <&macro_press &kp LSHFT>
                    , <&macro_tap &kp I>
                    , <&macro_release &kp LSHFT>;
            };
        };

        behaviors {
        hl: home_row_hold_tap_left {
            compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                tapping-term-ms = <280>;
                quick-tap-ms = <175>;
                require-prior-idle-ms = <150>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <KEYS_R THUMBS_R>;
                hold-trigger-on-release;
            };

            hr: home_row_hold_tap_right {
            compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                tapping-term-ms = <280>;
                quick-tap-ms = <175>;
                require-prior-idle-ms = <150>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <KEYS_L THUMBS_L>;
                hold-trigger-on-release;
            };

            hg: home_row_hold_tap_altgr {
             compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <225>;
                flavor = "hold-preferred";
                bindings = <&kp>, <&kp>;
            };

            hcr: home_row_compose_right {
            compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <280>;
                quick-tap-ms = <175>;
                require-prior-idle-ms = <150>;
                bindings = <&kp>, <&macro>;
                hold-trigger-key-positions = <KEYS_L THUMBS_L>;
                hold-trigger-on-release;
            };

            td_rst: reset_tap_dance {
            compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&sys_reset>, <&bootloader>;
            };

            // Ergo-L Behaviors
        dot_col: dot_colon {
            compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp DOT>, <&kp COLON>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };

            com_scol: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp COMMA>, <&kp SEMICOLON>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };

            minus_qm: minus_question {
            compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp MINUS>, <&kp QUESTION>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };

            dead_key: dead_key {
            compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&sl DEAD_L>, <&kp EXCL>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };

            // NEW: Behavior to call the cmp_i_trem macro
        macro_i_trem_call: macro_i_trem_call {
            compatible = "zmk,behavior-macro-tap"; // This behavior type is designed to directly call a macro
                #binding-cells = <0>; // No additional arguments needed for this behavior
                bindings = <&cmp_i_trem>; // This line tells macro_i_trem_call to execute cmp_i_trem
            };
        };

        keymap {
        compatible = "zmk,keymap";

            qwerty_layer {
            display-name = "qwerty";
                bindings = <
          &kp N1     &kp N2     &kp N3      &kp N4      &kp N5                      &kp N6    &kp N7      &kp N8      &kp N9     &kp N0
          &kp Q      &kp W      &kp E       &kp R       &kp T                       &kp Y     &kp U       &kp I       &kp O      &kp P
&kp TAB   &hl LALT A &hl LGUI S &hl LSHFT D &hl LCTRL F &kp G                       &kp H     &hr RCTRL J &hr RSHFT K &hr RGUI L &hr LALT SEMI &kp ENTER
&kp BSLH &kp Z      &kp X      &kp C       &kp V       &kp B                       &kp N     &kp M       &kp COMMA   &kp DOT    &kp FSLH      &kp SQT
                                            &kp ESC &kp SPACE &mo LOWER &mo RAISE &hg RALT BSPC &kp DEL
            >;
            };

            ergo_base_layer {
            display-name = "Ergo-L";
                bindings = <
          &kp N1      &kp N2     &kp N3     &kp N4       &kp N5                      &kp N6   &kp N7      &kp N8      &kp N9       &kp N0
          &kp Q       &kp C      &kp O      &kp P        &kp W                       &kp J    &kp M       &kp D       &kp SEMI    &kp Y
 &kp TAB  &hl LALT A &hl LGUI S &hl LSHFT E &hl LCTRL N  &kp F                       &kp L    &hr RCTRL R &hr RSHFT T &hr RGUI I   &hr LALT U &kp ENTER
 &kp BSLH &kp Z       &kp X      &minus_qm  &kp V        &kp B                       &dot_col &kp H       &kp G       &com_scol    &kp K      &kp DOUBLE_QUOTES
                                            &kp ESC &kp SPACE &mo LOWER &mo RAISE &hg RALT BSPC &kp DEL
            >;
            };

            lower_layer {
            display-name = "lower";
                bindings = <
           &kp F1              &kp F2               &kp F3          &kp F4        &kp F5  &kp KP_NUM  &kp KP_NUMBER_7       &kp KP_NUMBER_8       &kp KP_NUMBER_9 &kp KP_DIVIDE
           &kp F6              &kp F7               &kp F8          &kp F9        &kp F10 &kp LS(TAB) &kp KP_NUMBER_4       &kp KP_NUMBER_5       &kp KP_NUMBER_6 &kp KP_MULTIPLY
&trans &hl LALT SCROLLLOCK &hl LGUI PAUSE_BREAK &hl LSHFT PSCRN &hl LCTRL F12 &kp F11 &kp TAB &hr RCTRL KP_NUMBER_1 &hr RSHFT KP_NUMBER_2 &hr RGUI KP_NUMBER_3 &hr LALT KP_SUBTRACT &kp KP_ENTER
&studio_unlock &kp F11            &kp F12              &kp F13         &kp F14       &kp F15 &kp KP_EQUAL &kp KP_NUMBER_0 &double_0 &kp KP_DOT &kp KP_PLUS &kp LS(ENTER)
                                                   &trans &trans &trans &trans &trans &trans
            >;
            };

            raise_layer {
            display-name = "raise";
                bindings = <
           &kp C_BRI_DN  &kp C_BRI_UP &kp C_MUTE      &kp C_VOL_DN      &kp C_VOL_UP        &trans    &trans    &trans    &trans    &trans
           &kp C_PREV    &kp C_RW     &kp C_PP        &kp C_FF          &kp C_NEXT          &kp PG_UP &kp HOME  &kp UP    &kp END   &trans
&sys_reset &hl LALT CLCK &hl LGUI INS &hl LSHFT PSCRN &hl LCTRL K_CMENU &studio_unlock      &kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT &trans         &trans
&bootloader &trans       &tog ERGOL   &to KEYCODE     &to CHARCODE      &trans              &kp C_PP  &kp RCTRL &kp RSHFT &kp RGUI  &hr LALT C_PWR &trans
                                               &trans &trans &trans &trans &trans &trans
            >;
            };
          
            charcode_layer {
            display-name = "CharCode";
                bindings = <
          &kp N1     &kp N2   &kp N3   &kp N4   &kp N5                            &kp N6 &kp N7    &kp N8    &kp N9 &kp N0
          &kp LCTRL  &kp Q    &kp T    &kp D    &kp J                             &kp P  &kp SEMI  &kp L     &kp E  &kp R 
&kp TAB   &kp LSHFT  &kp A    &kp S    &kp I    &kp G                             &kp M  &kp Y     &kp FSLH  &kp H  &kp RS(DOT) &kp ENTER 
&kp ESC   &kp COMMA  &kp Z    &kp X    &kp W    &kp V                             &kp F  &kp U     &kp DOT   &kp N  &kp L       &kp K 
                                       &mo EXTRA_CHARCODE &kp SPACE &kp LALT &mo EXTRA_CHARCODE &kp B &to BASE
            >;
            };

            extra_charcode_layer {
            display-name = "CharCode+";
                bindings = <
          &trans   &trans   &kp K    &kp COMMA &kp B                              &trans &trans &trans &trans &trans  
          &kp P    &kp SEMI &kp L    &kp E     &kp R                              &trans &trans &trans &trans &trans  
&kp LALT  &kp M    &kp Y    &kp FSLH &kp H     &kp RS(DOT)                        &trans &trans &trans &trans &trans &trans  
&trans    &kp F    &kp U    &kp DOT  &kp N     &kp L                              &trans &trans &trans &trans &trans &trans  
                                       &trans   &trans  &trans  &trans &trans    &trans
            >;
            };


            keycode_layer {
            display-name = "KeyCode";
                bindings = <
          &kp N1     &kp N2   &kp N3   &kp N4   &kp N5                            &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
          &kp N6     &kp Q    &kp W    &kp E    &kp R                             &none  &none  &none  &none  &none 
&kp TAB   &kp LSHFT  &kp A    &kp S    &kp D    &kp F                             &none  &none  &none  &none  &none &none 
&kp ESC   &kp LCTRL  &kp Z    &kp X    &kp C    &kp V                             &none  &none  &none  &none  &none &none 
                                       &kp LALT &kp SPACE &mo EXTRA_KEYCODE &to BASE  &none  &none 
            >;
            };

            extra_keycode_layer {
            display-name = "KeyCode+";
                bindings = <
          &trans   &trans &kp T     &kp G   &kp B                  &trans    &trans  &trans  &trans  &trans  
          &kp Y    &kp I  &kp U     &kp O   &kp P                  &trans    &trans  &trans  &trans  &trans  
&kp LALT  &kp H    &kp J  &kp K     &kp L   &kp SEMI                  &trans    &trans  &trans  &trans  &trans   &trans  
&trans    &kp N    &kp M  &kp COMMA &kp DOT &kp FSLH                  &trans    &trans  &trans  &trans  &trans   &trans  
                                       &trans   &trans  &trans  &trans &trans    &trans
            >;
            };

            // Ergo-L Layers
        dead_key_layer {
            display-name = "deadkey";
                bindings = <
          &trans &trans &trans &trans &trans           &trans &trans &trans &trans &trans
          &kp Z &kp C &kp O &kp L &none                      &none &kp M &kp V &cmp_trem &kp J
&trans &hl LALT A &hl LGUI W &hl LSHFT E &hl LCTRL D &none     &trans &trans &hr LSHFT K &hcr LGUI macro_i_trem_call &hr LALT U &trans // Changed here!
&trans &kp Q &trans &trans &trans &trans &trans          &trans &trans &trans &trans &trans
                                       &trans   &trans  &trans  &trans &trans    &trans
            >;
            };

            upper_dead_key_layer {
            display-name = "DEADKEY";
                bindings = <
          &trans       &trans     &trans       &trans         &trans           &trans        &trans         &trans        &trans         &trans
          &cmp_car_u A &cedille_u &cmp_oe_u    &cmp_car_u O   &none            &none         &cmp_micro     &kp UNDER     &cmp_trem      &cmp_car_u U
&trans    &cmp_gq_u A  &cmp_sq_u E &cmp_gq_u E &cmp_car_u E   &none            &kp LPAR      &kp RPAR       &cmp_car_u I  &cmp_i_trem_u  &cmp_gq_u U &trans
&trans     &trans     &trans     &trans       &trans         &trans           &trans        &trans         &trans        &trans         &trans       &trans
                                       &trans   &trans  &trans  &trans &trans    &trans
            >;
            };

            sym_layer {
            display-name = "Sym";
                bindings = <
          &trans &trans &trans &trans &trans            &trans &trans &trans &trans &trans
          &kp GRAVE       &kp AT_SIGN    &kp HASH       &kp DOLLAR      &kp PERCENT      &kp CARET     &kp AMPERSAND   &kp ASTERISK    &kp PIPE        &kp DOUBLE_QUOTES
&trans    &hl LALT LBRC  &hl LGUI LPAR  &hl LSHFT RPAR  &hl LCTRL RBRC  &kp EQUAL        &kp BACKSLASH &hr LCTRL PLUS  &hr LSHFT MINUS  &hr LGUI SLASH  &hr LALT SINGLE_QUOTE
&trans     &trans         &kp LBKT       &kp RBKT       &kp TILDE       &trans           &trans        &kp TILDE       &kp LESS_THAN   &kp GREATER_THAN &trans
                                       &trans   &trans  &trans  &trans &trans    &trans
            >;
            };
        };
    };
    
